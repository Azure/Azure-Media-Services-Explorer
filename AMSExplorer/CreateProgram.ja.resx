<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBoxStartProgramNow.Size" type="System.Drawing.Size, System.Drawing">
    <value>161, 19</value>
  </data>
  <data name="checkBoxStartProgramNow.Text" xml:space="preserve">
    <value>プログラムをすぐに開始する</value>
  </data>
  <data name="checkBoxDynEnc.Size" type="System.Drawing.Size, System.Drawing">
    <value>141, 19</value>
  </data>
  <data name="checkBoxDynEnc.Text" xml:space="preserve">
    <value>動的暗号化の有効化</value>
  </data>
  <data name="label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>165, 15</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>5分 から 25 時間 (最大) まで</value>
  </data>
  <data name="label33.Size" type="System.Drawing.Size, System.Drawing">
    <value>114, 15</value>
  </data>
  <data name="label33.Text" xml:space="preserve">
    <value>出力先のストレージ :</value>
  </data>
  <data name="label11.Size" type="System.Drawing.Size, System.Drawing">
    <value>20, 15</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>144, 15</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>アーカイブ ウィンドウの長さ :</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>121, 15</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>新しいアセットの名前: </value>
  </data>
  <data name="label10.Size" type="System.Drawing.Size, System.Drawing">
    <value>20, 15</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>時</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="label13.Size" type="System.Drawing.Size, System.Drawing">
    <value>82, 15</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>マニフェスト名 :</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>高度なオプション</value>
  </data>
  <data name="labelURLFileNameWarning.Size" type="System.Drawing.Size, System.Drawing">
    <value>33, 15</value>
  </data>
  <data name="labelURLFileNameWarning.Text" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="labelManifestFile.Location" type="System.Drawing.Point, System.Drawing">
    <value>135, 182</value>
  </data>
  <data name="labelManifestFile.Size" type="System.Drawing.Size, System.Drawing">
    <value>345, 15</value>
  </data>
  <data name="labelLocatorID.Location" type="System.Drawing.Point, System.Drawing">
    <value>103, 158</value>
  </data>
  <data name="labelLocatorID.Size" type="System.Drawing.Size, System.Drawing">
    <value>377, 15</value>
  </data>
  <data name="label12.Size" type="System.Drawing.Size, System.Drawing">
    <value>109, 15</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>マニフェスト ファイル :</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>77, 15</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>ロケーター ID :</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>レプリカ</value>
  </data>
  <data name="checkBoxAddScaleUnit.Size" type="System.Drawing.Size, System.Drawing">
    <value>193, 19</value>
  </data>
  <data name="checkBoxAddScaleUnit.Text" xml:space="preserve">
    <value>1ストリーミングユニットを追加する</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>ライブプログラムは、プログラムを停止した際に録画しているオンデマンドコンテンツに自動的に変換し、アセットタブからアクセスできます
公開するすべてのストリーミングURLは、ライブプログラムが終了後も、そのまま利用可能となります</value>
  </data>
  <data name="checkBoxCreateLocator.Size" type="System.Drawing.Size, System.Drawing">
    <value>398, 19</value>
  </data>
  <data name="checkBoxCreateLocator.Text" xml:space="preserve">
    <value>このプログラム(アセット)をすぐに公開する (既定のロケーターの期間: {0} 日)</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>39, 15</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>説明 :</value>
  </data>
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 15</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>プログラム名 :</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>チャネル {0} の新しいプログラムの作成</value>
  </data>
  <data name="buttonOk.Text" xml:space="preserve">
    <value>プログラムの作成</value>
  </data>
  <data name="labelCloneLocators.Text" xml:space="preserve">
    <value>(自動生成の場合は空欄のまま)</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>レプリカ (複製プログラム) の出力 URL:</value>
  </data>
  <data name="checkBoxReplica.Text" xml:space="preserve">
    <value>このプログラムはもう1つのデータセンターにあるプログラムのレプリカである</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>このオプションは、もう1つのデータセンターにあるライブプログラムを作成し、同じ URL パスで新しいプログラムを生成したい場合に、利用します</value>
  </data>
</root>