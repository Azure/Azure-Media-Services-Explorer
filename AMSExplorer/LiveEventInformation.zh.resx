<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="toolStripMenuItemFilesCopyClipboard.Text" xml:space="preserve">
    <value>复制到剪贴板</value>
  </data>
  <data name="tabPageLiveEventInfo.Text" xml:space="preserve">
    <value>实时活动信息</value>
  </data>
  <data name="buttonAllowAllPreviewIP.Text" xml:space="preserve">
    <value>允许所有 IP 地址</value>
  </data>
  <data name="buttonAllowAllInputIP.Text" xml:space="preserve">
    <value>允许所有 IP 地址</value>
  </data>
  <data name="checkBoxKeyFrameIntDefined.Text" xml:space="preserve">
    <value>关键帧间隔 （s）:</value>
  </data>
  <data name="checkBoxInputSet.Text" xml:space="preserve">
    <value>定义 INPUT 允许的 IP 地址 ：</value>
  </data>
  <data name="checkBoxPreviewSet.Text" xml:space="preserve">
    <value>定义预览允许的 IP 地址 ：</value>
  </data>
  <data name="buttonDelPreviewIP.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="buttonDelInputIP.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="buttonAddPreviewIP.Text" xml:space="preserve">
    <value>增加</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>描述:</value>
  </data>
  <data name="buttonAddInputIP.Text" xml:space="preserve">
    <value>增加</value>
  </data>
  <data name="tabPageSettings.Text" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="checkBoxIgnore708.Text" xml:space="preserve">
    <value>忽略 CEA-708 隐藏字幕</value>
  </data>
  <data name="labelLiveEventMustBeStopped.Text" xml:space="preserve">
    <value>必须停止实时事件以更改编码设置</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>视频配置文件（只读） ：</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>音频配置文件（只读） ：</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>对于自定义预设，请联系amslived@microsoft.com</value>
  </data>
  <data name="radioButtonCustomPreset.Text" xml:space="preserve">
    <value>使用自定义预设 ：</value>
  </data>
  <data name="radioButtonDefaultPreset.Text" xml:space="preserve">
    <value>使用"{0}"预设</value>
  </data>
  <data name="groupBoxEncoding.Text" xml:space="preserve">
    <value>编码预设</value>
  </data>
  <data name="tabPageEncoding.Text" xml:space="preserve">
    <value>实时编码</value>
  </data>
  <data name="checkBoxcrossdomains.Text" xml:space="preserve">
    <value>定义跨域策略</value>
  </data>
  <data name="checkBoxclientpolicy.Text" xml:space="preserve">
    <value>定义客户端策略 ：</value>
  </data>
  <data name="tabPagePolicies.Text" xml:space="preserve">
    <value>策略</value>
  </data>
  <data name="tabPagePreview.Text" xml:space="preserve">
    <value>预览</value>
  </data>
  <data name="labelLEName.Text" xml:space="preserve">
    <value>实时事件:</value>
  </data>
  <data name="buttonClose.Text" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="buttonUpdateClose.Text" xml:space="preserve">
    <value>更新设置并关闭</value>
  </data>
  <data name="labelLiveEventStoppedOrStartedSettings.Text" xml:space="preserve">
    <value>实时事件必须处于停止或正在运行的状态才能更新设置</value>
  </data>
  <data name="openFileDialogSlate.Filter" xml:space="preserve">
    <value>Image|*.jpg|All files (*.*)|*.*</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>实时事件信息</value>
  </data>
</root>