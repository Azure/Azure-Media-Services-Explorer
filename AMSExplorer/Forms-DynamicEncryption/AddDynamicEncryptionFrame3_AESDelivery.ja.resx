<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBoxFinalExtURL.Location" type="System.Drawing.Point, System.Drawing">
    <value>36, 166</value>
  </data>
  <data name="labelkeylaurl.Size" type="System.Drawing.Size, System.Drawing">
    <value>76, 15</value>
  </data>
  <data name="labelkeylaurl.Text" xml:space="preserve">
    <value>鍵取得 URL:</value>
  </data>
  <data name="label3.Location" type="System.Drawing.Point, System.Drawing">
    <value>35, 84</value>
  </data>
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>547, 88</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>AMS から鍵配信を行う場合、強制的に他の URL を利用しない限りは、このフィールドは空欄とすること.

URL内には Key ID は指定しないこと. 以下のチェックボックスがチェックされた場合以外は、動的暗号化サービスは、AES 暗号化コンテンツのマニフェストを生成する際に、自動的に正しい Key ID を URL に追加する.</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>鍵配信サーバーの URL</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>複数のタイプのトークンをサポートする場合は、1つ以上のポリシーオプションを構成する</value>
  </data>
  <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
    <value>342, 33</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>115, 15</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>ポリシーオプション数 :</value>
  </data>
  <data name="numericUpDownNbOptions.Location" type="System.Drawing.Point, System.Drawing">
    <value>461, 29</value>
  </data>
  <data name="radioButtonDefineAuthPol.Size" type="System.Drawing.Size, System.Drawing">
    <value>292, 19</value>
  </data>
  <data name="radioButtonDefineAuthPol.Text" xml:space="preserve">
    <value>はい - コンテンツ鍵の取得の承認ポリシーを定義する</value>
  </data>
  <data name="radioButtonNoAuthPolicy.Size" type="System.Drawing.Size, System.Drawing">
    <value>374, 19</value>
  </data>
  <data name="radioButtonNoAuthPolicy.Text" xml:space="preserve">
    <value>いいえ - 外部の鍵配信サーバーを使って AES コンテンツ鍵を配信する</value>
  </data>
  <data name="groupBoxAuthPol.Text" xml:space="preserve">
    <value>Azure Media Services を利用した鍵配信</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>218, 42</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>ステップ 3
AES コンテンツ鍵の配信の構成</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>動的暗号化 - ステップ 3</value>
  </data>
  <data name="buttonOk.Text" xml:space="preserve">
    <value>次へ</value>
  </data>
  <data name="checkBoxFinalExtURL.Text" xml:space="preserve">
    <value>最終URL</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>(URL)</value>
  </data>
  <data name="groupBoxKeyAcqUrl.Text" xml:space="preserve">
    <value>鍵取得 URL</value>
  </data>
</root>