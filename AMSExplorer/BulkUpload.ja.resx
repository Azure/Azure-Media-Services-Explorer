<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonOk.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonCancel.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="panel1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>254, 20</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>外部アップロードでの新しいバルク アップロード</value>
  </data>
  <data name="label5.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonSplitSelection.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonGroupSelectionInOneAsset.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonRemoveAll.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="labelWarningFiles.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="comboBoxStorageAsset.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label33.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonDelFiles.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label2.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="dataGridAssetFiles.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabPage1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label10.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="radioButtonCENCEncryption.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="radioButtonStorageEncryption.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="radioButtonEncryptionNone.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonBrowseFile.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="textBoxFolderPath.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabPage2.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="linkLabelInfoAzCopy.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="checkBoxGenerateAzCopy.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabPage5.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="comboBoxSigniantServer.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label8.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label9.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="textBoxSigniantAPIKey.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="panelSigniant.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="linkLabelSigniantRequestKey.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="linklabelSigniantMarket.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="checkBoxGenerateSigniant.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabPage4.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="checkBoxGenerateAspera.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="linkLabelAspera.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabPage6.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label6.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabPage3.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabControl1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label3.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="textBoxManifestName.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="comboBoxStorageIngest.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label7.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="$this.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>新しいバルク アップロード</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>ストレージ :</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>作成するバルクアップロードの名前: </value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="tabPage6.Text" xml:space="preserve">
    <value>Aspera SOD</value>
  </data>
  <data name="linkLabelAspera.Text" xml:space="preserve">
    <value>Aspera SOD (Azure マーケットプレイス)</value>
  </data>
  <data name="checkBoxGenerateAspera.Text" xml:space="preserve">
    <value>Aspera URL を生成</value>
  </data>
  <data name="tabPage4.Text" xml:space="preserve">
    <value>Signiant Flight</value>
  </data>
  <data name="checkBoxGenerateSigniant.Text" xml:space="preserve">
    <value>Signiant (sigcli.exe) コマンドラインを生成</value>
  </data>
  <data name="linklabelSigniantMarket.Text" xml:space="preserve">
    <value>Signiant Flight (Azure マーケットプレイス)</value>
  </data>
  <data name="linkLabelSigniantRequestKey.Text" xml:space="preserve">
    <value>トライアルキーを申請</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>API キー: </value>
  </data>
  <data name="tabPage5.Text" xml:space="preserve">
    <value>Microsoft AzCopy</value>
  </data>
  <data name="checkBoxGenerateAzCopy.Text" xml:space="preserve">
    <value>AzCopy コマンドラインを生成</value>
  </data>
  <data name="linkLabelInfoAzCopy.Text" xml:space="preserve">
    <value>AzCopy 詳細情報</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>暗号化</value>
  </data>
  <data name="buttonBrowseFile.Text" xml:space="preserve">
    <value>ブラウズ...</value>
  </data>
  <data name="buttonOk.Text" xml:space="preserve">
    <value>バルクアップロードを生成</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="buttonRemoveAll.Text" xml:space="preserve">
    <value>すべて削除</value>
  </data>
  <data name="radioButtonStorageEncryption.Text" xml:space="preserve">
    <value>ストレージ暗号化</value>
  </data>
  <data name="label33.Text" xml:space="preserve">
    <value>ストレージ :</value>
  </data>
  <data name="buttonSelectFolder.Text" xml:space="preserve">
    <value>フォルダを選択...</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>アセット名はグリッド内で編集できます</value>
  </data>
  <data name="radioButtonCENCEncryption.Text" xml:space="preserve">
    <value>Common Encryption 暗号化済み (コンテンツはすでに PlayReady で暗号化済み)</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>コンテンツは、フォルダへアップロードする前に、ローカル上でAES-256 で暗号化されます</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>出力先のアセット</value>
  </data>
  <data name="buttonSelectFiles.ToolTip" xml:space="preserve">
    <value>それぞれのファイルは単一のアセットとして取り扱われます</value>
  </data>
  <data name="buttonGroupSelectionInOneAsset.Text" xml:space="preserve">
    <value>単一アセット内のグループ選択</value>
  </data>
  <data name="buttonSelectFiles.Text" xml:space="preserve">
    <value>ローカル ファイルを選択</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Signiant 範囲を選択 (AMS アカウントと同じ範囲) :</value>
  </data>
  <data name="buttonDelFiles.Text" xml:space="preserve">
    <value>選択したアイテムを削除</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>ファイルのリスト :</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>暗号化鍵はローカルで生成され、AMSアカウント上のターゲットとなるアセットにコピーされます</value>
  </data>
  <data name="radioButtonEncryptionNone.Text" xml:space="preserve">
    <value>なし (アップロード前の暗号化なし)</value>
  </data>
  <data name="labelWarningFiles.Text" xml:space="preserve">
    <value>警告 : 2つのファイルが同じ名前となっています</value>
  </data>
  <data name="buttonSelectFolder.ToolTip" xml:space="preserve">
    <value>フォルダーおよび各サブフォルダーは異なるアセットとして取り扱われます</value>
  </data>
  <data name="buttonSplitSelection.Text" xml:space="preserve">
    <value>選択したファイルを複数のアセットに分割</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>アセットのバルクアップロードでは、アセットファイルのアップロードとアセットの作成を分けて行うことができます

1) バルクアップロードコンテナーの名前を指定します
2) アセットとなるファイルとフォルダーを指定して、アップロードするアセットとアセットファイルを定義します
3) 必要に応じて、アセット名を編集やアセットに含まれるファイルの再指定を行います
4) オプション： アップロードの前にローカルでファイルの暗号化を行うことができます
　（この場合新しいフォルダーに暗号化されたファイルは格納されます）
5) 選択したアップロード方法を使って、バルクアップロードコンテナーに関連付けしたファイル群をアップロードします
6) Azure Media Services は自動的にアセット作成を完了します</value>
  </data>
</root>